<?xml version="1.0" encoding="utf-8"?>
<!--
  **********************************************************************************************

  This file was generated by a tool from the project file: ServiceConfiguration.Template.cscfg

  Changes to this file may cause incorrect behavior and will be lost if the file is regenerated.

  **********************************************************************************************
-->
<ServiceConfiguration serviceName="SplitMerge" xmlns="http://schemas.microsoft.com/ServiceHosting/2008/10/ServiceConfiguration" osFamily="4" osVersion="*" schemaVersion="2014-06.2.4">
  <Role name="SplitMergeWorker">
    <Instances count="1" />
    <ConfigurationSettings>
      <!-- 
        The Azure Storage connection string to use for internal cross-role synchronization.
        For example, "DefaultEndpointsProtocol=https;AccountName=myAccountName;AccountKey=myAccountKey"
        To use the Windows Azure Emulator, use the value "UseDevelopmentStorage=true"
      -->
      <Setting name="WorkerRoleSynchronizationStorageAccountConnectionString" value="DefaultEndpointsProtocol=https;AccountName=cloudwebstorageaccount;AccountKey=5GuoJyTSIdcktGczIccFrpqI2wJ5vEd0kOTP8U21i3aaZ9jHzWfIHeqIzxQ9JcHouZLrmRt+w8zArl9cQVBGuA==;EndpointSuffix=core.windows.net" />
      <!-- 
        The SQL Server database connection string to use for Split/Merge Service metadata storage.
        For example, "Data Source=myServer;InitialCatalog=myDatabase; User Name=myUserName; Password=myPassword"
        This setting must have same value for SplitMergeWorker and SplitMergeWeb roles.
      -->
      <Setting name="ElasticScaleMetadata" value="Server=20.124.204.96,1433;Initial Catalog=SaaSWebApp_ShardMapManager;Persist Security Info=False;User ID=developer;Password=TheDarkGhost#7;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=60;TrustServerCertificate=True" />
      <!--
        The number of times that processing a Split/Merge request will be attempted. If this count is exceeded then
        the request will be deleted from the request queue and will not be processed any further.
      -->
      <Setting name="MaxRetryCount" value="5" />
      <!--
        Update the 'thumbprint' attribute with the thumbprint of the certificates uploaded to the
        cloud service that should be used to encrypt credentials stored in the metadata storage database.
      -->
      <Setting name="DataEncryptionPrimaryCertificateThumbprint" value="CE24540C4489799248F570C7A2D719A794E003CE" />
      <!--
        The period after which the service metadata is deleted. Allowed values are integers greater than 0 or "" (empty string).
		If the setting is set to empty string than MetadataExpirationPeriodInMinutes takes the default value of 2 weeks.
      -->
      <Setting name="MetadataExpirationPeriodInMinutes" value="20160" />
    </ConfigurationSettings>
    <Certificates>
      <!-- 
        Update the 'thumbprint' attribute with the thumbprint of the certificates uploaded to the
        cloud service that should be used to encrypt credentials stored in the metadata storage database.
      -->
      <Certificate name="DataEncryptionPrimary" thumbprint="CE24540C4489799248F570C7A2D719A794E003CE" thumbprintAlgorithm="sha1" />
    </Certificates>
  </Role>
  <Role name="SplitMergeWeb">
    <!--
      SplitMergeWeb supports multiple instances, but 1 instance should be sufficient.
    -->
    <Instances count="1" />
    <ConfigurationSettings>
      <!-- 
        If the client certificates are not issued by a certification authority that is trusted
        by the Windows images loaded into the Windows Azure VMs-for example, if these are self-signed-
        copy the thumbprint of the <Certificate name="CA"> specified further below, to force the
        installation of these certificates in the Trusted Root Certification Authorities store.
      -->
      <Setting name="AdditionalTrustedRootCertificationAuthorities" value="CE24540C4489799248F570C7A2D719A794E003CE" />
      <!-- 
        The comma-separated list of client certificate thumbprints that are authorized to access
        the Web and API endpoints.
      -->
      <Setting name="AllowedClientCertificateThumbprints" value="CE24540C4489799248F570C7A2D719A794E003CE" />
      <!--
        Update the 'thumbprint' attribute with the thumbprint of the certificates uploaded to the
        cloud service that should be used to encrypt credentials stored in the metadata storage database.
      -->
      <Setting name="DataEncryptionPrimaryCertificateThumbprint" value="CE24540C4489799248F570C7A2D719A794E003CE" />
      <!--
        How client certificates should be verified for revocation. See 
        http://msdn.microsoft.com/en-us/library/system.security.cryptography.x509certificates.x509revocationmode.aspx.
        
        'NoCheck' will be necessary for self-signed certificates for which a revocation list is not uploaded into the Azure VM.        
        'Online' is recommended for client certificates issued by official Certification Authorities.
      -->
      <Setting name="ClientCertificateRevocationCheck" value="NoCheck" />
      <!-- 
        The SQL Server database connection string to use for Split/Merge Service metadata storage.
        For example, "Data Source=myServer; InitialCatalog=myDatabase; User Name=myUserName; Password=myPassword"
        This setting must have same value for SplitMergeWorker and SplitMergeWeb roles.
      -->
      <Setting name="ElasticScaleMetadata" value="Server=20.124.204.96,1433;Initial Catalog=SaaSWebApp_ShardMapManager;Persist Security Info=False;User ID=developer;Password=TheDarkGhost#7;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=60;TrustServerCertificate=True;" />
      <!--
        Whether or not to configure ASP.NET and MVS to require authentication based on
        client certificates specified in 'AllowedClientCertificateThumbprints' below.
        Recommended: true.
      -->
      <Setting name="SetupWebAppForClientCertificates" value="true" />
      <!--
        Whether or not to configure IIS to negotiate client certificates.
        Recommended: true.
      -->
      <Setting name="SetupWebserverForClientCertificates" value="true" />
      <!-- 
        Dynamic IP Restriction
        
        Configures the Denial of Service detection and prevention mechanisms in IIS. These settings correspond
        to the ones in http://www.iis.net/configreference/system.webserver/security/dynamicipsecurity.
        
        To enable dynamic IP restriction, you need to set both DynamicIpRestrictionDenyByConcurrentRequests and 
        DynamicIpRestrictionDenyByRequestRate to true.
      -->
      <Setting name="DynamicIpRestrictionDenyByConcurrentRequests" value="false" />
      <Setting name="DynamicIpRestrictionMaxConcurrentRequests" value="20" />
      <Setting name="DynamicIpRestrictionDenyByRequestRate" value="true" />
      <Setting name="DynamicIpRestrictionMaxRequests" value="100" />
      <Setting name="DynamicIpRestrictionRequestIntervalInMilliseconds" value="2000" />
      <Setting name="DynamicIpRestrictionDenyAction" value="AbortRequest" />
    </ConfigurationSettings>
    <Certificates>
      <!-- 
        Update the 'thumbprint' attribute with the thumbprint of the certificates uploaded to the
        cloud service that should be used for SSL communication.
      -->
      <Certificate name="SSL" thumbprint="CE24540C4489799248F570C7A2D719A794E003CE" thumbprintAlgorithm="sha1" />
      <Certificate name="CA" thumbprint="CE24540C4489799248F570C7A2D719A794E003CE" thumbprintAlgorithm="sha1" />
      <!--
        Update the 'thumbprint' attribute with the thumbprint of the certificates uploaded to the
        cloud service that should be used to encrypt credentials stored in the metadata storage database.
      -->
      <Certificate name="DataEncryptionPrimary" thumbprint="CE24540C4489799248F570C7A2D719A794E003CE" thumbprintAlgorithm="sha1" />
    </Certificates>
  </Role>
  <NetworkConfiguration>
    <AccessControls>
      <!-- 
          Add or update <AccessControl> items below in order to filter the remote IP addresses
          from which the service endpoints are accessible.
          
          The default configuration below sets up two rules:
          1. One that denies access from all IP addresses, which is bound to the HTTP endpoint by default
          2. One that allows access from any IP address, which is bound to the HTTPS endpoint by default
          
          See http://msdn.microsoft.com/en-us/library/azure/dn376541.aspx for more information.
      -->
      <AccessControl name="DenyAll">
        <Rule action="deny" description="Deny all addresses" order="1" remoteSubnet="0.0.0.0/0" />
      </AccessControl>
      <AccessControl name="AllowAll">
        <Rule action="permit" description="All remote addresses are allowed" order="1" remoteSubnet="0.0.0.0/0" />
      </AccessControl>
    </AccessControls>
    <EndpointAcls>
      <!-- 
          Update the 'accessControl' attribute of <EndpointAcl> items below as appropriate. They must
          refer to <AccessControl> items configured above.
      -->
      <EndpointAcl role="SplitMergeWeb" endPoint="HttpIn" accessControl="DenyAll" />
      <EndpointAcl role="SplitMergeWeb" endPoint="HttpsIn" accessControl="AllowAll" />
    </EndpointAcls>
  </NetworkConfiguration>
</ServiceConfiguration>