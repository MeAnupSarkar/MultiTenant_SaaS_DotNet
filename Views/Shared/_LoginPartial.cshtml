@using Microsoft.AspNetCore.Identity
@using SaaS.WebApp.Models
@using Microsoft.AspNetCore.Http

@inject SignInManager<ApplicationUser> SignInManager


@*@inject UserManager<ApplicationUser> UserManager*@

@{
    //var user = await UserManager.GetUserAsync(User);


}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        if (Context.Session.GetString("TenantId") is not null)
        {
            <li class="nav-item">
                <a class="nav-link text-primary" asp-controller="home" asp-action="Index" title="Manage"><b>Tenant ID: </b> @Context.Session.GetString("TenantId")</a>
            </li>

        }

        if (Context.Session.GetString("UserType") is not null)
        {

            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="home" asp-action="Index" title="Manage"><b>Subscription: </b> @Context.Session.GetString("UserType")</a>
            </li>
        }


        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
